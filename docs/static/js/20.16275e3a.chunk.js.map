{"version":3,"sources":["paperd/Panel.tsx","paperd/services/Daub.ts","paperd/services/Move.ts","paperd/services/Draw.ts","paperd/services/Union.ts","paperd/services/index.ts","paperd/PaperGraphic.tsx","paperd/index.tsx"],"names":["Panel","props","style","con","padding","cursor","div","margin","Daub","paper","oldPath","newPath","circle","hitOptions","fill","class","this","Path","tolerance","onMouseUp","event","onMouseMove","position","point","onMouseDrag","hitPath","project","hitTest","item","intersects","unite","remove","activeLayer","addChild","Circle","center","radius","strokeColor","view","on","off","namespace","Move","path","segment","hoverPath","segments","stroke","id","selected","delta","add","smooth","onMouseDown","hitResult","type","location","insert","index","Draw","start","e","closed","simplify","fillColor","Color","hue","Math","random","saturation","brightness","element","Union","console","log","ServiceCore","Services","service","serviceName","name","find","s","Error","destroy","getService","PaperGraphic","paperdom","createRef","serviceCore","rePaperSub","onRadioChange","registerService","target","value","unsubscribe","current","canvas","document","createElement","appendChild","setup","size","getBoundingClientRect","viewSize","Size","width","height","observable","fromEvent","window","pipe","debounceTime","map","subscribe","span","border","ref","Group","defaultValue","buttonStyle","onChange","Button","PureComponent","Paperd"],"mappings":"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","file":"static/js/20.16275e3a.chunk.js","sourcesContent":["// import { Checkbox } from 'antd'\r\n// import { togglePath } from '../store/paper/actions';\r\n\r\nfunction Panel(props: any) {\r\n  // const { paperStore: { pathStore }, dispatch } = props\r\n  // console.log(pathStore)\r\n  return (\r\n    <div style={style.con}>\r\n      显示当前元素数据\r\n      {/* {pathStore.map((p: any, k: any) =>\r\n        <div key={k} style={{\r\n          backgroundColor: p.style.fillColor.toCanvasStyle(), ...style.div\r\n        }}>\r\n          <Checkbox checked={p.visible} onChange={v => dispatch(togglePath(p.id, v.target.checked))} />\r\n          {p.id}\r\n        </div>\r\n      )} */}\r\n    </div>\r\n  )\r\n}\r\nexport default Panel\r\nconst style: { [key: string]: React.CSSProperties } = {\r\n  con: {\r\n    padding: 10,\r\n    cursor: 'pointer'\r\n  },\r\n  div: {\r\n    margin: '5px 0'\r\n  }\r\n}","import { Service } from \".\";\r\n\r\n// import store from \"../../store\";\r\n// import { addPath, removePath } from \"../../store/paper/actions\";\r\n\r\nexport class Daub implements Service {\r\n  static namespace = 'daub'\r\n  oldPath: paper.Path | null = null\r\n  newPath: paper.Path | null = null\r\n  circle: paper.Path.Circle\r\n  hitOptions = {\r\n    fill: true,\r\n    class: this.paper.Path,\r\n    tolerance: 30\r\n  }\r\n  constructor(public readonly paper: paper.PaperScope) {\r\n    this.circle = new paper.Path.Circle({\r\n      center: [80, 50],\r\n      radius: 30,\r\n      strokeColor: 'black'\r\n    })\r\n\r\n    this.paper.view.on('mouseup', this.onMouseUp)\r\n    this.paper.view.on('mousemove', this.onMouseMove)\r\n    this.paper.view.on('mousedrag', this.onMouseDrag)\r\n  }\r\n  onMouseUp = (event: any) => {\r\n    //保存path\r\n    if (this.oldPath && this.newPath) {\r\n      //删除老的 \r\n      // store.dispatch(removePath(this.oldPath.id))\r\n      //保存新的\r\n      // store.dispatch(addPath(this.newPath))\r\n      this.oldPath = this.newPath = null\r\n    }\r\n  }\r\n  onMouseMove = (event: any) => {\r\n    this.circle.position = event.point\r\n  }\r\n  onMouseDrag = (event: any) => {\r\n    const { point } = event\r\n    this.circle.position = point\r\n\r\n    const hitResult = this.paper.project!.hitTest(point, this.hitOptions) || {}\r\n    const { item: hitPath } = hitResult\r\n    if (hitPath) {\r\n      //判断相交\r\n      if (hitPath.intersects(this.circle)) {\r\n        if (!this.oldPath) {\r\n          this.oldPath = hitPath as paper.Path\r\n        }\r\n        this.newPath = (hitPath as any).unite(this.circle)\r\n        hitPath.remove()\r\n        this.paper.project!.activeLayer.addChild(this.newPath!)\r\n      }\r\n    }\r\n  }\r\n\r\n  destroy(): void {\r\n    this.paper.view.off('mouseup', this.onMouseUp)\r\n    this.paper.view.off('mousemove', this.onMouseMove)\r\n    this.paper.view.off('mousedrag', this.onMouseDrag)\r\n    this.circle.remove()\r\n  }\r\n}","import { Service } from \".\";\r\n\r\nexport class Move implements Service {\r\n  static namespace = 'move'\r\n  path: null | paper.Path = null\r\n  segment: paper.Segment | null = null\r\n  hoverPath: paper.Path | null = null\r\n  hitOptions = {\r\n    segments: true,\r\n    stroke: true,\r\n    fill: true,\r\n    tolerance: 5\r\n  }\r\n  constructor(public readonly paper: paper.PaperScope) {\r\n    this.paper.view.on('mousemove', this.onMouseMove)\r\n    this.paper.view.on('mousedrag', this.onMouseDrag)\r\n    this.paper.view.on('mousedown', this.onMouseDown)\r\n  }\r\n\r\n  onMouseMove = (event: any) => {\r\n    const { point } = event\r\n    const hitResult = this.paper.project!.hitTest(point, this.hitOptions) || {}\r\n    const { item: hitPath } = hitResult\r\n    if (hitPath) {\r\n      if (this.hoverPath && this.hoverPath.id !== hitPath.id) {\r\n        this.hoverPath.selected = false\r\n      }\r\n      this.hoverPath = hitPath as paper.Path\r\n      hitPath.selected = true\r\n    } else {\r\n      if (this.hoverPath && this.hoverPath.selected) {\r\n        this.hoverPath.selected = false\r\n      }\r\n    }\r\n  }\r\n\r\n  onMouseDrag = (event: any) => {\r\n    const { delta } = event\r\n    if (this.segment) {\r\n      this.segment.point = this.segment.point!.add(delta)\r\n      this.path!.smooth()\r\n    } else if (this.path) {\r\n      this.path.position = this.path.position!.add(delta)\r\n    }\r\n  }\r\n  onMouseDown = (event: any) => {\r\n    this.path = this.segment = null\r\n    const { point } = event\r\n    const hitResult = this.paper.project!.hitTest(point, this.hitOptions)\r\n    if (!hitResult) return\r\n    this.path = hitResult.item as paper.Path\r\n    const { type } = hitResult\r\n    if (type === 'segment') {\r\n      this.segment = hitResult.segment\r\n    }\r\n    if (type === 'stroke') {\r\n      const location = hitResult.location\r\n      this.segment = this.path!.insert(location!.index + 1, point)\r\n    }\r\n    if (type === 'fill') {\r\n      this.paper.project!.activeLayer.addChild(hitResult.item!);\r\n    }\r\n  }\r\n  destroy(): void {\r\n    this.paper.view.off('mousemove', this.onMouseMove)\r\n    this.paper.view.off('mousedrag', this.onMouseDrag)\r\n    this.paper.view.off('mousedown', this.onMouseDown)\r\n  }\r\n}\r\n","import { Service } from \".\";\r\n\r\n// import store from \"../../store\";\r\n// import { addPath } from \"../../store/paper/actions\";\r\n\r\nexport class Draw implements Service {\r\n  static namespace = 'draw'\r\n  path: paper.Path | null = null\r\n  start: paper.Point | null = null\r\n  constructor(public paper: paper.PaperScope) {\r\n    this.paper.view.on('mouseup', this.onMouseUp)\r\n    this.paper.view.on('mousedrag', this.onMouseDrag)\r\n    this.paper.view.on('mousedown', this.onMouseDown)\r\n    this.paper.view.element.style.cursor = 'crosshair'\r\n  }\r\n  onMouseUp = (e: any) => {\r\n    if (!this.path || !this.start) return\r\n    this.path.closed = true\r\n    this.path.simplify()\r\n    // this.path.smooth()\r\n    // store.dispatch(addPath(this.path))\r\n  }\r\n  onMouseDrag = (e: any) => {\r\n    if (!this.path) return\r\n    this.path.add(e.point)\r\n  }\r\n  onMouseDown = (e: any) => {\r\n    this.path = new this.paper.Path()\r\n    this.path.fillColor = new this.paper.Color({\r\n      hue: Math.random() * 360,\r\n      saturation: 1,\r\n      brightness: 1\r\n    })\r\n\r\n    this.path.strokeColor = new this.paper.Color(0, 0, 0, 1)\r\n    this.start = e.point\r\n    this.path.add(e.point)\r\n  }\r\n  destroy(): void {\r\n    this.paper.view.off('mouseup', this.onMouseUp)\r\n    this.paper.view.off('mousedrag', this.onMouseDrag)\r\n    this.paper.view.off('mousedown', this.onMouseDown)\r\n    this.paper.view.element.style.cursor = 'auto'\r\n  }\r\n}\r\n","import { Service } from \".\";\r\n\r\nexport class Union implements Service {\r\n  static namespace = 'union'\r\n  path: null | paper.Path = null\r\n  \r\n  hitOptions = {\r\n    // segments: true,\r\n    // stroke: true,\r\n    fill: true,\r\n    tolerance: 5\r\n  }\r\n  constructor(public readonly paper: paper.PaperScope) {\r\n    this.paper.view.on('mousemove', this.onMouseMove)\r\n    this.paper.view.on('mousedrag', this.onMouseDrag)\r\n    this.paper.view.on('mousedown', this.onMouseDown)\r\n  }\r\n\r\n  onMouseMove = (event: any) => {\r\n\r\n  }\r\n\r\n  onMouseDrag = (event: any) => {\r\n    const { delta } = event\r\n    if (this.path) {\r\n      this.path.position = this.path.position!.add(delta)\r\n    }\r\n  }\r\n  onMouseDown = (event: any) => {\r\n    const { point } = event\r\n    const hitResult = this.paper.project!.hitTest(point, this.hitOptions) || {}\r\n    const { item } = hitResult\r\n    this.path = item as paper.Path | null\r\n    console.log(this.path)\r\n  }\r\n  destroy(): void {\r\n    this.paper.view.off('mousemove', this.onMouseMove)\r\n    this.paper.view.off('mousedrag', this.onMouseDrag)\r\n    this.paper.view.off('mousedown', this.onMouseDown)\r\n  }\r\n}","import { Daub } from \"./Daub\";\r\nimport { Move } from \"./Move\";\r\nimport { Draw } from \"./Draw\";\r\nimport { Union } from \"./Union\";\r\n\r\nexport abstract class Service {\r\n  static namespace: string\r\n  constructor(public readonly paper: paper.PaperScope) { }\r\n  abstract destroy(): void\r\n}\r\n\r\nexport type ServiceType = Daub | Move | Draw | Union\r\nexport class ServiceCore {\r\n  Services = [Daub, Move, Draw, Union]\r\n  service: ServiceType | null = null\r\n  serviceName: string | null = null\r\n  constructor(public readonly paper: paper.PaperScope) { }\r\n\r\n  getService(name: string) {\r\n    return this.Services.find(s => s.namespace === name)\r\n  }\r\n  registerService(name: string) {\r\n    //verification service is Repeat\r\n    if (name === this.serviceName) {\r\n      throw new Error('The service has not changed!')\r\n    }\r\n    //cancellation service\r\n    if (this.service) {\r\n      this.service.destroy()\r\n      this.service = null\r\n    }\r\n    //switch service\r\n    const service = this.getService(name)\r\n    if (!service) throw new Error('This service not is exist!')\r\n    this.service = new service(this.paper)\r\n    this.serviceName = service.namespace\r\n  }\r\n}","import { createRef, PureComponent } from 'react'\r\nimport { Row, Col, Radio } from 'antd'\r\nimport * as paper from 'paper'\r\nimport Panel from './Panel';\r\nimport { ServiceCore } from './services';\r\nimport { RadioChangeEvent } from 'antd/lib/radio';\r\nimport { fromEvent, Subscription } from 'rxjs';\r\nimport { debounceTime, map } from 'rxjs/operators';\r\n\r\nexport default class PaperGraphic extends PureComponent {\r\n  paperdom = createRef<HTMLDivElement>()\r\n  paper: paper.PaperScope\r\n  serviceCore: ServiceCore\r\n  rePaperSub: Subscription | null = null\r\n  constructor(props: {}) {\r\n    super(props)\r\n    this.paper = new paper.PaperScope()\r\n    this.serviceCore = new ServiceCore(this.paper)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.rePaperSub?.unsubscribe()\r\n  }\r\n  componentDidMount() {\r\n    const paperdom = this.paperdom.current\r\n    if (!paperdom) return\r\n    const canvas = document.createElement('canvas')\r\n    paperdom.appendChild(canvas)\r\n\r\n    this.paper.setup(canvas)\r\n    this.serviceCore.registerService('draw')\r\n\r\n    const size = paperdom.getBoundingClientRect()\r\n    this.paper.view.viewSize = new this.paper.Size(\r\n      size.width, size.height\r\n    )\r\n    const observable = fromEvent(window, 'resize').pipe(\r\n      debounceTime(300),\r\n      map(e => paperdom.getBoundingClientRect())\r\n    )\r\n    this.rePaperSub = observable.subscribe(e => {\r\n      this.paper.view.viewSize = new this.paper.Size(e.width, e.height)\r\n    })\r\n  }\r\n\r\n  onRadioChange = (e: RadioChangeEvent) => {\r\n    if (!this.serviceCore) return\r\n    this.serviceCore.registerService(e.target.value)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col\r\n            span={18}\r\n            style={{ border: '1px solid', height: 500 }}\r\n            ref={this.paperdom}\r\n          />\r\n          <Col span={6}><Panel /></Col>\r\n        </Row>\r\n        <Radio.Group\r\n          defaultValue=\"draw\"\r\n          buttonStyle=\"solid\"\r\n          onChange={this.onRadioChange}\r\n        >\r\n          <Radio.Button value=\"draw\">勾画</Radio.Button>\r\n          <Radio.Button value=\"move\">移动</Radio.Button>\r\n          <Radio.Button value=\"daub\">涂抹</Radio.Button>\r\n          <Radio.Button value=\"union\">联合</Radio.Button>\r\n          <Radio.Button value=\"hide\">隐藏</Radio.Button>\r\n          <Radio.Button value=\"show\">显示</Radio.Button>\r\n        </Radio.Group>\r\n      </div>\r\n    )\r\n  }\r\n}","import PaperGraphic from \"./PaperGraphic\";\r\n\r\nexport default function Paperd() {\r\n  return(\r\n    <div>\r\n      <PaperGraphic/>\r\n    </div>\r\n  )\r\n}"],"sourceRoot":""}